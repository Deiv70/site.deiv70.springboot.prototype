version: '3'

services:

  jdbc_db:
    image: ${SPRING_JDBC_DATABASE_CLIENT}:${SPRING_JDBC_DATABASE_CLIENT_VERSION}
    restart: unless-stopped
#    hostname: db.prototype.springboot.local
    environment:
      MYSQL_DATABASE: ${SPRING_JDBC_DATABASE_SCHEMA}
      MYSQL_USER: ${SPRING_JDBC_DATABASE_USERNAME}
      MYSQL_PASSWORD: ${SPRING_JDBC_DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${SPRING_JDBC_DATABASE_ROOT_PASSWORD}
    # Expose to the Host
    ports:
      # < Port exposed locally > : < Port running inside container >
      - ${SPRING_JDBC_DATABASE_PORT}:3306
    # Expose to the Docker Network
#    expose:
#      - '3306'
    volumes:
      - prototype-jdbc_db-vol:/var/lib/mysql
    networks:
      - prototype-net

#  mongo:
#    image: mongo
#    restart: always
#    environment:
#      MONGODB_REPLICA_SET_MODE: primary
#      MONGO_REPLICA_SET_NAME: rs0
#      MONGO_INITDB_DATABASE: gdl-db
#    command: mongod --replSet rs0 --dbpath /data/db --port 27017 --bind_ip_all
#    volumes:
#      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
#    expose:
#      - 27017
#    ports:
#      - "27017:27017"
#    # entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]

networks:
  prototype-net:

volumes:
  prototype-jdbc_db-vol:
